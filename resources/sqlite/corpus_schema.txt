PRAGMA foreign_keys = ON;

CREATE TABLE Training (
    article_text TEXT UNIQUE NOT NULL,
    difficult BOOLEAN NOT NULL,
    article_url TEXT UNIQUE,
    grade_level INTEGER,
    language TEXT NOT NULL,
    pair TEXT,
    CHECK (difficult IN (0, 1))
);

# for english texts only (i.e. this table's kinda redundant)

CREATE TABLE TestAndTraining (
    article_text TEXT UNIQUE NOT NULL,
    difficult BOOLEAN NOT NULL,
    article_url TEXT UNIQUE NOT NULL,
    grade_level INTEGER,
    CHECK ((difficult = 1 AND grade_level IS null) OR (difficult = 0 AND grade_level IN (1, 2, 3, 5)))
);

CREATE TABLE UserRatings(
    rating_id INTEGER PRIMARY KEY,
    user_id INTEGER,
    text_id INTEGER,
    difficulty INTEGER,
    interest INTEGER,
    status INTEGER, # for now: 0 > not started, 1 > complete, 2 > started and incomplete, 3 > dropped
    date_time_completed TEXT

    FOREIGN KEY (user_id) REFERENCES UsersTable (user_id) ON DELETE CASCADE,
    FOREIGN KEY (text_id) REFERENCES Repository (article_id) ON DELETE CASCADE,
    UNIQUE(user_id, text_id)
);

CREATE TABLE UsersTable(
    user_id INTEGER PRIMARY KEY, 0
    username TEXT UNIQUE, 1
    password TEXT, 2
    last_poem_id INTEGER, 3
    last_short_story_id INTEGER, 4
    last_news_id INTEGER, 5
    user_profile TEXT, 6
    first_time BOOLEAN NOT NULL DEFAULT 1 CHECK (first_time IN (0, 1)), 7
    recorded_level INTEGER 8
);


# contains the sorted poems; text_type='poem' or 'short_story' or 'news'

CREATE TABLE Repository (
    article_id INTEGER PRIMARY KEY, 0
    article_title TEXT NOT NULL, 1
    article_text TEXT UNIQUE, 2
    article_url TEXT UNIQUE, 3
    date_time_added TEXT, 4
    publication_or_publisher_name TEXT, 5
    order_string TEXT, 6
    language TEXT, 7
    added_by INTEGER, 8
    article_author TEXT, 9
    text_type TEXT, 10
    frequency_vector TEXT, 11

    FOREIGN KEY (added_by) REFERENCES UsersTable (user_id) ON DELETE SET NULL
);

CREATE UNIQUE INDEX RepositoryIndices ON Repository(language, text_type, order_string);


# to store project gutenberg files
# the article_url will contain the Gutenberg book code rather than the actual url

CREATE TABLE GutenbergTemp (
    article_id INTEGER PRIMARY KEY,
    article_title TEXT NOT NULL,
    article_text TEXT UNIQUE,
    article_url TEXT UNIQUE,
    date_time_added TEXT,
    publication_or_publisher_name TEXT,
    order_string TEXT,
    language TEXT,
    added_by INTEGER,
    article_author TEXT,
    text_type TEXT,
    
    FOREIGN KEY (added_by) REFERENCES UsersTable (user_id) ON DELETE SET NULL
);